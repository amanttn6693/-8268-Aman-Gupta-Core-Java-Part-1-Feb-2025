Q3.Explain the difference between method overloading and method overriding in Java. Provide code examples to illustrate both concepts.
Ans.  Method overloading occurs when multiple methods in the same class have the same name but different parameter lists (number, types, or order of parameters). Return type can be different, but it doesn't determine overloading.
      Example of Method Overloading
      
      class Calculator {
          int add(int a, int b) {
              return a + b;
          }
      
          int add(int a, int b, int c) {
              return a + b + c;
          }
      
          double add(double a, double b) {
              return a + b;
          }
      
          public static void main(String[] args) {
              Calculator calc = new Calculator();
              System.out.println(calc.add(2, 3)); 
              System.out.println(calc.add(2, 3, 4)); 
              System.out.println(calc.add(2.5, 3.5)); 
          }
      }

  Method overriding occurs when a subclass provides a specific implementation for a method already defined in its superclass. The method must have the same name, return type (or covariant return type), and parameter list.
  Example of Method Overriding
  
  class Animal {
      void sound() {
          System.out.println("Animals make sounds");
      }
  }
  
  class Dog extends Animal {
      @Override
      void sound() {
          System.out.println("Dog barks");
      }
  }
  
  class Main {
      public static void main(String[] args) {
          Animal animal = new Animal();
          animal.sound(); 
  
          Animal dog = new Dog();
          dog.sound(); 
      }
  }
        
